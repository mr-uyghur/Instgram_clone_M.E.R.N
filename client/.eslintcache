[{"E:\\Insta_clone_MERN\\client\\src\\index.js":"1","E:\\Insta_clone_MERN\\client\\src\\App.js":"2","E:\\Insta_clone_MERN\\client\\src\\reportWebVitals.js":"3","E:\\Insta_clone_MERN\\client\\src\\components\\NavBar.js":"4","E:\\Insta_clone_MERN\\client\\src\\components\\screens\\Home.js":"5","E:\\Insta_clone_MERN\\client\\src\\components\\screens\\Profile.js":"6","E:\\Insta_clone_MERN\\client\\src\\components\\screens\\Signup.js":"7","E:\\Insta_clone_MERN\\client\\src\\components\\screens\\Signin.js":"8","E:\\Insta_clone_MERN\\client\\src\\components\\screens\\CreatePost.js":"9","E:\\Insta_clone_MERN\\client\\src\\reducers\\userReducer.js":"10","E:\\Insta_clone_MERN\\client\\src\\components\\screens\\UserProfile.js":"11","E:\\Insta_clone_MERN\\client\\src\\components\\screens\\SubscribedUserPosts.js":"12","E:\\Insta_clone_MERN\\client\\src\\components\\screens\\Explore.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":2155,"mtime":1613012815045,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1661,"mtime":1613013152379,"results":"18","hashOfConfig":"15"},{"size":8886,"mtime":1613018633992,"results":"19","hashOfConfig":"15"},{"size":1940,"mtime":1613016266358,"results":"20","hashOfConfig":"15"},{"size":4472,"mtime":1613018192076,"results":"21","hashOfConfig":"15"},{"size":2765,"mtime":1613013052142,"results":"22","hashOfConfig":"15"},{"size":3615,"mtime":1613012507809,"results":"23","hashOfConfig":"15"},{"size":428,"mtime":1612763475287,"results":"24","hashOfConfig":"15"},{"size":6029,"mtime":1613016302816,"results":"25","hashOfConfig":"15"},{"size":8630,"mtime":1612939295579,"results":"26","hashOfConfig":"15"},{"size":2398,"mtime":1613012742850,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"9vfwpr",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Insta_clone_MERN\\client\\src\\index.js",[],["57","58"],"E:\\Insta_clone_MERN\\client\\src\\App.js",["59","60"],"E:\\Insta_clone_MERN\\client\\src\\reportWebVitals.js",[],"E:\\Insta_clone_MERN\\client\\src\\components\\NavBar.js",[],"E:\\Insta_clone_MERN\\client\\src\\components\\screens\\Home.js",["61","62","63","64","65"],"E:\\Insta_clone_MERN\\client\\src\\components\\screens\\Profile.js",["66"],"E:\\Insta_clone_MERN\\client\\src\\components\\screens\\Signup.js",["67","68","69"],"E:\\Insta_clone_MERN\\client\\src\\components\\screens\\Signin.js",["70","71","72"],"E:\\Insta_clone_MERN\\client\\src\\components\\screens\\CreatePost.js",["73","74"],"E:\\Insta_clone_MERN\\client\\src\\reducers\\userReducer.js",["75","76","77"],"export const initialState = null\r\n\r\nexport const reducer = (state,action) =>{\r\n    if(action.type == \"USER\"){\r\n        return action.payload\r\n    }\r\n    \r\n    if(action.type == \"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type == \"UPDATE\"){\r\n        return {\r\n            ...state, \r\n            followers:action.payload.followers,\r\n            following:action.payload.following\r\n        }\r\n\r\n    }\r\n    return state\r\n}","E:\\Insta_clone_MERN\\client\\src\\components\\screens\\UserProfile.js",["78","79","80"],"E:\\Insta_clone_MERN\\client\\src\\components\\screens\\SubscribedUserPosts.js",["81","82","83","84","85","86"],"import React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport { UserContext } from '../../App'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState([])\r\n    // the state will get the data of user whose logged in\r\n    const { state, dispatch } = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        fetch('/getsubpost', {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                setData(result.posts)\r\n            })\r\n    }, [])\r\n\r\n    const likePost = (id) => {\r\n        fetch('/like', {\r\n            method: 'put',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    const unlikePost = (id) => {\r\n        fetch('/unlike', {\r\n            method: 'put',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result)\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const makeComment = (text, postId) => {\r\n        // sent text and postId to the backend\r\n        fetch('/comment', {\r\n            method: 'put',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                const newData = data.map(item => {\r\n                    if (item._id == result._id) {\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const deletePost = (postid) => {\r\n        fetch(`/deletepost/${postid}`, {\r\n            method: 'delete',\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                const newData = data.filter(item => {\r\n                    return item._id !== result._id\r\n                })\r\n                setData(newData)\r\n            })\r\n\r\n    }\r\n\r\n    const deleteComment = (postId, commentId) => {\r\n        fetch(`/deletecomment/${postId}/${commentId}`, {\r\n            method: \"delete\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"jwt\")\r\n            },\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                let newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {/* use map to show dymamic info from the data base */}\r\n            {\r\n                data.map(item => {\r\n                    return (\r\n                        <div className=\"card home-card\" key={item._id}>\r\n                            <h5>\r\n                        <Link to = {item.postedBy._id !== state._id? \"/profile/\"+item.postedBy._id :\"/profile\" } >{item.postedBy.name} </Link>\r\n                                {item.postedBy._id == state._id\r\n                                    && <i className=\"material-icons\"\r\n                                        style={{ float: \"right\", color: \"red\" }}\r\n                                        onClick={() => deletePost(item._id)}\r\n                                    >delete_forever</i>\r\n                                }\r\n\r\n                            </h5>\r\n\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photos} />\r\n                            </div>\r\n\r\n                            <div className=\"card-image\">\r\n                                <i className=\"material-icons\" style={{ color: \"red\" }}>favorite</i>\r\n                                {/* user can only like post once, check if user is included \r\n                                in the likes array, then return like or unlike button accordingly*/}\r\n                                {item.likes.includes(state._id) ?\r\n                                    <i className=\"material-icons\"\r\n                                        onClick={() => { unlikePost(item._id) }}\r\n                                    >thumb_down</i>\r\n                                    :\r\n                                    <i className=\"material-icons\"\r\n                                        onClick={() => { likePost(item._id) }}\r\n                                    >thumb_up</i>\r\n                                }\r\n\r\n\r\n                                {/* show the number of likes by getting the length of likes array */}\r\n                                <h6> {item.likes.length} likes</h6>\r\n                                <h6> {item.title}</h6>\r\n                                <p> {item.body} </p>\r\n\r\n                                {\r\n                                    item.comments.map((record) => {\r\n                                        return (\r\n                                            <h6 key={record._id}><span style={{ fontWeight: \"500\" }}> {record.postedBy.name} </span>  {record.text}\r\n                                                {record.postedBy._id === state._id || item.postedBy._id == state._id\r\n                                                    ? <i className=\"material-icons small-icon\"\r\n                                                        onClick={() => deleteComment(item._id, record._id)}\r\n                                                        style={{ float: \"right\",fontSize: \"18px\" }}  >delete</i>\r\n                                                    :\r\n                                                    record.postedBy._id === state._id\r\n                                                    && <i className=\"material-icons small-icon\"\r\n                                                        onClick={() => deleteComment(item._id, record._id)}\r\n                                                        style={{ float: \"right\", fontSize: \"18px\"}}  >delete </i>\r\n                                                }\r\n                                            </h6>\r\n\r\n\r\n                                        )\r\n\r\n\r\n                                    })\r\n\r\n                                }\r\n\r\n                                <form onSubmit={(e) => {\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value, item._id)\r\n                                }}>\r\n                                    <input type=\"text\" placeholder=\"add a comment\" /> <button className=\"btn waves-effect waves-light #0288d1 light-blue darken-2\" type=\"submit\">Comment</button>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div >\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Home","E:\\Insta_clone_MERN\\client\\src\\components\\screens\\Explore.js",["87","88","89"],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":21,"column":10,"nodeType":"96","messageId":"97","endLine":21,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":33,"column":6,"nodeType":"100","endLine":33,"endColumn":8,"suggestions":"101"},{"ruleId":"94","severity":1,"message":"102","line":9,"column":20,"nodeType":"96","messageId":"97","endLine":9,"endColumn":28},{"ruleId":"103","severity":1,"message":"104","line":150,"column":37,"nodeType":"105","endLine":150,"endColumn":132},{"ruleId":"106","severity":1,"message":"107","line":154,"column":52,"nodeType":"108","messageId":"109","endLine":154,"endColumn":54},{"ruleId":"103","severity":1,"message":"104","line":164,"column":33,"nodeType":"105","endLine":164,"endColumn":58},{"ruleId":"106","severity":1,"message":"107","line":191,"column":105,"nodeType":"108","messageId":"109","endLine":191,"endColumn":107},{"ruleId":"94","severity":1,"message":"102","line":6,"column":18,"nodeType":"96","messageId":"97","endLine":6,"endColumn":26},{"ruleId":"98","severity":1,"message":"110","line":16,"column":7,"nodeType":"100","endLine":16,"endColumn":12,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":41,"column":24,"nodeType":"114","messageId":"115","endLine":41,"endColumn":25,"suggestions":"116"},{"ruleId":"112","severity":1,"message":"113","line":41,"column":49,"nodeType":"114","messageId":"115","endLine":41,"endColumn":50,"suggestions":"117"},{"ruleId":"94","severity":1,"message":"95","line":8,"column":12,"nodeType":"96","messageId":"97","endLine":8,"endColumn":17},{"ruleId":"112","severity":1,"message":"113","line":13,"column":23,"nodeType":"114","messageId":"115","endLine":13,"endColumn":24,"suggestions":"118"},{"ruleId":"112","severity":1,"message":"113","line":13,"column":48,"nodeType":"114","messageId":"115","endLine":13,"endColumn":49,"suggestions":"119"},{"ruleId":"94","severity":1,"message":"120","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"121","line":45,"column":8,"nodeType":"100","endLine":45,"endColumn":13,"suggestions":"122"},{"ruleId":"106","severity":1,"message":"107","line":4,"column":20,"nodeType":"108","messageId":"109","endLine":4,"endColumn":22},{"ruleId":"106","severity":1,"message":"107","line":8,"column":20,"nodeType":"108","messageId":"109","endLine":8,"endColumn":22},{"ruleId":"106","severity":1,"message":"107","line":11,"column":20,"nodeType":"108","messageId":"109","endLine":11,"endColumn":22},{"ruleId":"94","severity":1,"message":"123","line":9,"column":12,"nodeType":"96","messageId":"97","endLine":9,"endColumn":22},{"ruleId":"98","severity":1,"message":"124","line":23,"column":8,"nodeType":"100","endLine":23,"endColumn":10,"suggestions":"125"},{"ruleId":"106","severity":1,"message":"126","line":77,"column":88,"nodeType":"108","messageId":"109","endLine":77,"endColumn":90},{"ruleId":"94","severity":1,"message":"127","line":1,"column":50,"nodeType":"96","messageId":"97","endLine":1,"endColumn":58},{"ruleId":"94","severity":1,"message":"102","line":9,"column":20,"nodeType":"96","messageId":"97","endLine":9,"endColumn":28},{"ruleId":"106","severity":1,"message":"107","line":88,"column":34,"nodeType":"108","messageId":"109","endLine":88,"endColumn":36},{"ruleId":"106","severity":1,"message":"107","line":148,"column":52,"nodeType":"108","messageId":"109","endLine":148,"endColumn":54},{"ruleId":"103","severity":1,"message":"104","line":158,"column":33,"nodeType":"105","endLine":158,"endColumn":58},{"ruleId":"106","severity":1,"message":"107","line":185,"column":105,"nodeType":"108","messageId":"109","endLine":185,"endColumn":107},{"ruleId":"94","severity":1,"message":"95","line":10,"column":13,"nodeType":"96","messageId":"97","endLine":10,"endColumn":18},{"ruleId":"94","severity":1,"message":"102","line":10,"column":20,"nodeType":"96","messageId":"97","endLine":10,"endColumn":28},{"ruleId":"103","severity":1,"message":"104","line":39,"column":33,"nodeType":"105","endLine":39,"endColumn":58},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["130"],"'dispatch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["131"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["132","133"],["134","135"],["136","137"],["138","139"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["140"],"'showfollow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["141"],"Expected '!==' and instead saw '!='.","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"messageId":"146","fix":"147","desc":"148"},{"messageId":"149","fix":"150","desc":"151"},{"messageId":"146","fix":"152","desc":"148"},{"messageId":"149","fix":"153","desc":"151"},{"messageId":"146","fix":"154","desc":"148"},{"messageId":"149","fix":"155","desc":"151"},{"messageId":"146","fix":"156","desc":"148"},{"messageId":"149","fix":"157","desc":"151"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [dispatch, history]",{"range":"162","text":"163"},"Update the dependencies array to be: [uploadFields, url]",{"range":"164","text":"165"},"removeEscape",{"range":"166","text":"167"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"168","text":"169"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"170","text":"167"},{"range":"171","text":"169"},{"range":"172","text":"167"},{"range":"173","text":"169"},{"range":"174","text":"167"},{"range":"175","text":"169"},"Update the dependencies array to be: [body, history, title, url]",{"range":"176","text":"177"},"Update the dependencies array to be: [userid]",{"range":"178","text":"179"},[1247,1249],"[dispatch, history]",[510,515],"[uploadFields, url]",[1323,1324],"",[1323,1323],"\\",[1348,1349],[1348,1348],[430,431],[430,430],[455,456],[455,455],[1607,1612],"[body, history, title, url]",[794,796],"[userid]"]